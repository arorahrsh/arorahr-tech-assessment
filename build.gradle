plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'nz.co.acme'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	integrationTestImplementation {
		extendsFrom testImplementation
	}
	integrationTestRuntimeOnly {
		extendsFrom testRuntimeOnly
	}
}

repositories {
	mavenCentral()
}

sourceSets {
	integrationTest {
		java.srcDir file("src/integrationTest/java")
		resources.srcDir file("src/integrationTest/resources")
		runtimeClasspath += sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
		compileClasspath += sourceSets.main.compileClasspath + sourceSets.test.compileClasspath
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.google.code.gson:gson:2.13.1'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	integrationTestImplementation 'io.github.hakky54:logcaptor:2.9.3'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('integrationTest', Test) {
	group = 'verification'
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	shouldRunAfter tasks.test
	useJUnitPlatform()
}

check.dependsOn integrationTest